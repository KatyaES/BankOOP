class Debt:    def __init__(self, debt, year_percent, min_payment, min_payment_percent):        self.__debt = debt        self.__year_percent = year_percent/100        self.__min_payment = min_payment        self.__min_payment_percent = min_payment_percent/100    def year_debt_part(self):        return round(((self.__debt * self.__year_percent) +                (self.__min_payment * self.__min_payment_percent)), 2)    def month_debt(self):        return round(self.year_debt_part() / 12, 2)    def day_debt(self):        months = ['January', 'February', 'Mart', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']        day_percent = self.__year_percent / 365        for month in months:            self.__debt -= 3800            print(f'{month}: Debt: {round(self.__debt * day_percent*30)} | Debt: {round(self.__debt)}â‚½')            for day in range(1, 31):                self.__debt += self.__debt * day_percent    def half_year_debt_with_min_payment(self):        months = ['January', 'February', 'Mart', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']        month_percent = round((self.__year_percent / 12), 4)        while self.__debt > 3800:            self.__debt -= 3800            month_debt = month_percent * self.__debt            self.__debt += month_debt            print(f'{months[0]}: percent: {round(month_debt, 2)} | Debt: {round(self.__debt, 2)}')            months.pop(0)            months.append(months[0])        else:            print(f'{months[0]} Debt: {round(self.__debt, 2)}')if __name__ == '__main__':    Katya = Debt(37918.79, 15, 3800, 20)    print('----Year Debt----')    print(Katya.year_debt_part())    print('----Month Debt----')    print(Katya.month_debt())    Katya.half_year_debt_with_min_payment()    print()    print()    Denis = Debt(48599, 20, 3800, 10)    Denis.day_debt()